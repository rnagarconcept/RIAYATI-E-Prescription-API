CREATE OR REPLACE PACKAGE HOSPITAL.RIAYATIEPRESCRIPTION_INTEGRATION AS
  PROCEDURE GET_PAT_RX_HEADER(P_RX_NO IN  NUMBER, p_refcur OUT SYS_REFCURSOR);
  PROCEDURE GET_PHY_CREDENATIAL(p_refcur OUT SYS_REFCURSOR);
  PROCEDURE GET_FACILITY_CREDENATIAL(p_refcur OUT SYS_REFCURSOR);
  PROCEDURE GET_PAT_RX_PATIENTTAG(P_RX_NO IN  NUMBER, p_refcur OUT SYS_REFCURSOR);
  PROCEDURE GET_PAT_WITH_REFNO(P_RX_NO IN  NUMBER, p_refcur OUT SYS_REFCURSOR);
  PROCEDURE GET_PENDING_REQUESTS(p_refcur OUT SYS_REFCURSOR);
  PROCEDURE GET_PAT_ERX_ENCOUNTER(p_refcur OUT SYS_REFCURSOR);
  PROCEDURE GET_LICENSE_DETAILS(p_refcur OUT SYS_REFCURSOR);
  PROCEDURE SAVE_ERX_RESPONSE(P_REQ_ID IN NUMBER,P_SenderID IN NVARCHAR2,P_ReceiverID IN NVARCHAR2,P_TransactionDate IN NVARCHAR2, P_RecordCount IN NUMBER,P_DispositionFlag IN NVARCHAR2,P_PayerID IN NVARCHAR2,P_Id OUT PAT_ERX_RESPONSE_DETAIL.ID%TYPE);
  PROCEDURE SAVE_ERX_RESPONSE_AUTHORIZATION(P_REQ_ID IN NUMBER,P_AUTH_ID IN NUMBER,P_IDPayer IN NVARCHAR2,P_DenialCode IN NVARCHAR2,P_Start_Date IN NVARCHAR2,P_End_Date IN NVARCHAR2);
  PROCEDURE SAVE_ERX_RESPONSE_AUTHORIZATION_ACTIVITY(P_AUTH_ID IN NUMBER,P_REQ_ID IN NUMBER,P_Activity_Type IN NUMBER,P_Code IN NUMBER,P_Quantity IN NUMBER,P_Net IN NUMBER,P_List IN NUMBER,P_PatientShare IN NUMBER,P_PaymentAmount IN NUMBER);
  PROCEDURE SAVE_ERX_RESPONSE_AUTH_ACT_OBSERVATION(P_ACTIVITY_ID IN NUMBER,P_REQ_ID IN NUMBER,P_Type IN NVARCHAR2,P_CODE IN NVARCHAR2,P_VALUE IN NVARCHAR2, P_ValueType IN NVARCHAR2);
END RIAYATIEPRESCRIPTION_INTEGRATION;
CREATE OR REPLACE PACKAGE BODY RIAYATIEPRESCRIPTION_INTEGRATION AS
 PROCEDURE GET_PAT_RX_HEADER(P_RX_NO IN  NUMBER, p_refcur OUT SYS_REFCURSOR)
 AS
	BEGIN
        OPEN p_refcur FOR
		SELECT SENDER_ID 
		,RECEIVER_ID 
		,TRANSACTION_DATE 
		,RECORD_COUNT 
		,DISPOSITION_FLAG 
		,ORDER_NO
		,MRN
		,ORDER_TYPE 
		FROM  PAT_ERX_HEADER WHERE ERX_NO LIKE P_RX_NO AND STATUS=0;
		
	END GET_PAT_RX_HEADER;		
PROCEDURE GET_PENDING_REQUESTS(p_refcur OUT SYS_REFCURSOR)
 AS
	BEGIN		
		OPEN p_refcur FOR
		SELECT 
			  ID 
			  ,FACILITY_ID			  
              ,REQUEST_TYPE          
              ,PAYLOAD				
              ,IS_PROCESSING         
		      ,RESPONSE_STATUS_CODE  
		      ,ERROR_MESSAGE         
              ,CREATED_DATE          
              ,RESPONSE	  
		FROM RIAYATI_PENDING_REQUESTS WHERE IS_PROCESSING=0 ORDER BY ID DESC;
		
	END GET_PENDING_REQUESTS;
	
PROCEDURE GET_PAT_ERX_ENCOUNTER(p_refcur OUT SYS_REFCURSOR)
 AS
	BEGIN
	   OPEN p_refcur FOR
		SELECT DISTINCT 
			 ERX_NO
			,ERX_ID
			,ERX_TYPE
			,PAYER_ID
			,CLINICIAN_ID
			,MEMBER_ID
			,NATIONAL_ID
			,DOB
			,WEIGHT
			,EMAIL
			,FACILITY_ID
			,ENCOUNTER_TYPE
			,RESULT
			,ID_PAYER
			,DENIAL_CODE
			,UPD_DATETIME
			,ERX_COMMENT
			FROM  PAT_ERX_ENCOUNTER; 
		
	END GET_PAT_ERX_ENCOUNTER;

PROCEDURE GET_LICENSE_DETAILS(p_refcur OUT SYS_REFCURSOR)
AS
	BEGIN
		OPEN p_refcur FOR
           SELECT 
			PR.ERX_NO
			,PR.SENDER_ID
			,PR.STATUS
			,PR.UPD_FLAG
			,PR.MRN
			,PR.ORDER_NO
			,FLI.F_LIC AS FACILITY_LIC_ID
			,FLI.F_USER AS FACILITY_LIC_USER
			,FLI.F_PWD AS FACILITY_LIC_PWD
			,FLI.ACTIVE	AS FACILITY_LIC_STATUS
			,C.C_USER AS CLINICIAN_USER
			,C.C_PWD AS CLINICIAN_PWD
			,C.ACTIVE AS CLINICIAN_STATUS
			FROM PAT_ERX_HEADER PR
			LEFT JOIN PAT_ERX_ENCOUNTER E ON PR.ERX_NO = E.ERX_NO
			LEFT JOIN ERX_FACILITY_LICENSE FLI ON PR.SENDER_ID = FLI.F_LIC
			LEFT JOIN ERX_CLINICIAN_LICENSE C ON FLI.ID = C.F_ID;	
	END GET_LICENSE_DETAILS;
	
PROCEDURE GET_PHY_CREDENATIAL(p_refcur OUT SYS_REFCURSOR)
AS
	BEGIN
		OPEN p_refcur FOR
           SELECT 
			 C.F_ID
			,C_LIC,C_USER
			,C_PWD
			,F_LIC
			,F_USER
			,F_PWD 
		   FROM ERX_CLINICIAN_LICENSE C
		   INNER JOIN ERX_FACILITY_LICENSE F ON C.F_ID = F.ID
		   WHERE C.ACTIVE=1;	
	END GET_PHY_CREDENATIAL;

PROCEDURE GET_FACILITY_CREDENATIAL(p_refcur OUT SYS_REFCURSOR)
AS
	BEGIN
		OPEN p_refcur FOR
           SELECT 
             F_LIC,F_USER,F_PWD 
            FROM 
             ERX_FACILITY_LICENSE F 
            WHERE F.ACTIVE=1;
	
	END GET_FACILITY_CREDENATIAL;


PROCEDURE GET_PAT_RX_PATIENTTAG(P_RX_NO IN  NUMBER, p_refcur OUT SYS_REFCURSOR)
AS
	BEGIN
		OPEN p_refcur FOR
           SELECT MEMBER_ID 
		   ,NATIONAL_ID 
		   ,DOB 
		   ,WEIGHT 
		   ,EMAIL  
		   FROM  PAT_ERX_ENCOUNTER T1,PAT_ERX_HEADER T2 
           WHERE T1.ERX_NO =T2.ERX_NO AND  T2.ERX_NO LIKE P_RX_NO AND STATUS=0;
	
	END GET_PAT_RX_PATIENTTAG;
	
PROCEDURE GET_PAT_WITH_REFNO(P_RX_NO IN  NUMBER, p_refcur OUT SYS_REFCURSOR)
AS
	BEGIN
		OPEN p_refcur FOR
           SELECT DISTINCT T1.ERX_NO
		   ,T1.RES_CODE
		   ,T2.MEMBER_ID  
		   FROM  PAT_ERX_HEADER T1,PAT_ERX_ENCOUNTER T2 
		   WHERE T1.ERX_NO = T2.ERX_NO AND T1.ERX_NO = P_RX_NO AND T1.STATUS=2;	
	END GET_PAT_WITH_REFNO;
	
	
PROCEDURE SAVE_ERX_RESPONSE(P_REQ_ID IN NUMBER,P_SenderID IN NVARCHAR2,P_ReceiverID IN NVARCHAR2,P_TransactionDate IN NVARCHAR2, P_RecordCount IN NUMBER,P_DispositionFlag IN NVARCHAR2,P_PayerID IN NVARCHAR2,P_Id OUT PAT_ERX_RESPONSE_DETAIL.ID%TYPE)
AS
	BEGIN
		INSERT INTO PAT_ERX_RESPONSE_DETAIL(REQ_ID,SenderID,ReceiverID,TransactionDate,RecordCount,DispositionFlag,PayerID)
		VALUES(P_REQ_ID,P_SenderID,P_ReceiverID,P_TransactionDate, P_RecordCount,P_DispositionFlag,P_PayerID) RETURNING ID INTO P_Id;
		COMMIT;


	END SAVE_ERX_RESPONSE;
PROCEDURE SAVE_ERX_RESPONSE_AUTHORIZATION(P_REQ_ID IN NUMBER,P_AUTH_ID IN NUMBER,P_IDPayer IN NVARCHAR2,P_DenialCode IN NVARCHAR2,P_Start_Date IN NVARCHAR2,P_End_Date IN NVARCHAR2)
AS
BEGIN
		INSERT INTO PAT_ERX_AUTHORIZATION(REQ_ID,AUTH_ID,IDPayer,DenialCode,Start_Date,End_Date)
		VALUES(P_REQ_ID,P_AUTH_ID,P_IDPayer,P_DenialCode,P_Start_Date,P_End_Date);
		COMMIT;

END SAVE_ERX_RESPONSE_AUTHORIZATION;

PROCEDURE SAVE_ERX_RESPONSE_AUTHORIZATION_ACTIVITY(P_AUTH_ID IN NUMBER,P_REQ_ID IN NUMBER,P_Activity_Type IN NUMBER,P_Code IN NUMBER,P_Quantity IN NUMBER,P_Net IN NUMBER,P_List IN NUMBER,P_PatientShare IN NUMBER,P_PaymentAmount IN NUMBER)
AS
BEGIN
		INSERT INTO PAT_ERX_AUTHORIZATION_ACTIVITY(AUTH_ID,REQ_ID,Activity_Type,Code,Quantity,Net,List,PatientShare,PaymentAmount)
		VALUES(P_AUTH_ID,P_REQ_ID,P_Activity_Type,P_Code,P_Quantity,P_Net,P_List,P_PatientShare,P_PaymentAmount);
		COMMIT;

END SAVE_ERX_RESPONSE_AUTHORIZATION_ACTIVITY;

PROCEDURE SAVE_ERX_RESPONSE_AUTH_ACT_OBSERVATION(P_ACTIVITY_ID IN NUMBER,P_REQ_ID IN NUMBER,P_Type IN NVARCHAR2,P_CODE IN NVARCHAR2,P_VALUE IN NVARCHAR2, P_ValueType IN NVARCHAR2)
AS
BEGIN
	INSERT INTO PAT_ERX_AUTH_ACT_OBSERVATION(ACTIVITY_ID,REQ_ID,OBS_TYPE,Code,OBS_VALUE,ValueType)
	VALUES(P_ACTIVITY_ID,P_REQ_ID,P_Type,P_Code,P_VALUE,P_ValueType);
	COMMIT;
END SAVE_ERX_RESPONSE_AUTH_ACT_OBSERVATION;
END RIAYATIEPRESCRIPTION_INTEGRATION;

  
  
  
  